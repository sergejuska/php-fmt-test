apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # ports:
          #   - name: fastcgi
          #     containerPort: 9000
          # livenessProbe:
          #   failureThreshold: 3
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   tcpSocket:
          #     port: fastcgi
          # readinessProbe:
          #   failureThreshold: 3
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   tcpSocket:
          #     port: fastcgi
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/www/html
        - name: nginx
          image: nginx
          imagePullPolicy: Always
          ports:
            - name: nginx
              containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nginxconf
              readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "app.fullname" .) }}  
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: nginxconf
          configMap:
            defaultMode: 256
            name: nginxthroughpass
            optional: false